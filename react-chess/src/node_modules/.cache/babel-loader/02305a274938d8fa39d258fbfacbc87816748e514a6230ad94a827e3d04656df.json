{"ast":null,"code":"export const getCharacter = file => String.fromCharCode(file + 96);\nexport const createPosition = () => {\n  const position = new Array(8).fill(\"\").map(x => new Array(8).fill(\"\"));\n  for (let i = 0; i < 8; i++) {\n    position[6][i] = \"bp\";\n    position[1][i] = \"wp\";\n  }\n  position[0][0] = \"wr\";\n  position[0][1] = \"wn\";\n  position[0][2] = \"wb\";\n  position[0][3] = \"wq\";\n  position[0][4] = \"wk\";\n  position[0][5] = \"wb\";\n  position[0][6] = \"wn\";\n  position[0][7] = \"wr\";\n  position[7][0] = \"br\";\n  position[7][1] = \"bn\";\n  position[7][2] = \"bb\";\n  position[7][3] = \"bq\";\n  position[7][4] = \"bk\";\n  position[7][5] = \"bb\";\n  position[7][6] = \"bn\";\n  position[7][7] = \"br\";\n  return position;\n};\nexport const copyPosition = position => {\n  const newPosition = new Array(8).fill(\"\").map(x => new Array(8).fill(\"\"));\n  for (let rank = 0; rank < position.length; rank++) {\n    for (let file = 0; file < position[0].length; file++) {\n      newPosition[rank][file] = position[rank][file];\n    }\n  }\n  return newPosition;\n};\nexport const areSameColorTiles = (coords1, coords2) => (coords1.x + coords1.y) % 2 === coords2.x + coords2.y;\nexport const findPieceCoords = (position, type) => {\n  let results = [];\n  position.forEach((rank, i) => {\n    rank.forEach((pos, j) => {\n      if (pos === type) results.push({\n        x: i,\n        y: j\n      });\n    });\n  });\n  return results;\n};\nexport const getNewMoveNotation = ({\n  piece,\n  rank,\n  file,\n  x,\n  y,\n  position,\n  promotesTo\n}) => {\n  let note = \"\";\n  rank = Number(rank);\n  file = Number(file);\n  if (piece[1] === \"k\" && Math.abs(file - y) === 2) {\n    if (file < y) return \"O-O\";else return \"O-O-O\";\n  }\n  if (piece[1] !== \"p\") {\n    note += piece[1].toUpperCase();\n    if (position[x][y]) {\n      note += \"x\";\n    }\n  } else if (rank !== x && file !== y) {\n    note += getCharacter(file + 1) + \"x\";\n  }\n  note += getCharacter(y + 1) + (x + 1);\n  if (promotesTo) note += \"=\" + promotesTo.toUpperCase();\n  return note;\n};","map":{"version":3,"names":["getCharacter","file","String","fromCharCode","createPosition","position","Array","fill","map","x","i","copyPosition","newPosition","rank","length","areSameColorTiles","coords1","coords2","y","findPieceCoords","type","results","forEach","pos","j","push","getNewMoveNotation","piece","promotesTo","note","Number","Math","abs","toUpperCase"],"sources":["C:/Users/Dr. Diabootical/OneDrive/Gaming/ReactChess-master/src/helper.js"],"sourcesContent":["export const getCharacter = (file) => String.fromCharCode(file + 96);\nexport const createPosition = () => {\n  const position = new Array(8).fill(\"\").map((x) => new Array(8).fill(\"\"));\n\n  for (let i = 0; i < 8; i++) {\n    position[6][i] = \"bp\";\n    position[1][i] = \"wp\";\n  }\n\n  position[0][0] = \"wr\";\n  position[0][1] = \"wn\";\n  position[0][2] = \"wb\";\n  position[0][3] = \"wq\";\n  position[0][4] = \"wk\";\n  position[0][5] = \"wb\";\n  position[0][6] = \"wn\";\n  position[0][7] = \"wr\";\n\n  position[7][0] = \"br\";\n  position[7][1] = \"bn\";\n  position[7][2] = \"bb\";\n  position[7][3] = \"bq\";\n  position[7][4] = \"bk\";\n  position[7][5] = \"bb\";\n  position[7][6] = \"bn\";\n  position[7][7] = \"br\";\n\n  return position;\n};\n\nexport const copyPosition = (position) => {\n  const newPosition = new Array(8).fill(\"\").map((x) => new Array(8).fill(\"\"));\n\n  for (let rank = 0; rank < position.length; rank++) {\n    for (let file = 0; file < position[0].length; file++) {\n      newPosition[rank][file] = position[rank][file];\n    }\n  }\n\n  return newPosition;\n};\n\nexport const areSameColorTiles = (coords1, coords2) =>\n  (coords1.x + coords1.y) % 2 === coords2.x + coords2.y;\n\nexport const findPieceCoords = (position, type) => {\n  let results = [];\n  position.forEach((rank, i) => {\n    rank.forEach((pos, j) => {\n      if (pos === type) results.push({ x: i, y: j });\n    });\n  });\n  return results;\n};\n\nexport const getNewMoveNotation = ({\n  piece,\n  rank,\n  file,\n  x,\n  y,\n  position,\n  promotesTo,\n}) => {\n  let note = \"\";\n\n  rank = Number(rank);\n  file = Number(file);\n  if (piece[1] === \"k\" && Math.abs(file - y) === 2) {\n    if (file < y) return \"O-O\";\n    else return \"O-O-O\";\n  }\n\n  if (piece[1] !== \"p\") {\n    note += piece[1].toUpperCase();\n    if (position[x][y]) {\n      note += \"x\";\n    }\n  } else if (rank !== x && file !== y) {\n    note += getCharacter(file + 1) + \"x\";\n  }\n\n  note += getCharacter(y + 1) + (x + 1);\n\n  if (promotesTo) note += \"=\" + promotesTo.toUpperCase();\n\n  return note;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}