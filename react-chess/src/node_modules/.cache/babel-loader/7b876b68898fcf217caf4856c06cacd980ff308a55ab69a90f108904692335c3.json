{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dr. Diabootical\\\\OneDrive\\\\Gaming\\\\ReactChess-master\\\\src\\\\components\\\\Pieces\\\\Piece.js\",\n  _s = $RefreshSig$();\nimport arbiter from '../../arbiter/arbiter';\nimport { useAppContext } from '../../contexts/Context';\nimport { generateCandidates } from '../../reducer/actions/move';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Piece = ({\n  rank,\n  file,\n  piece\n}) => {\n  _s();\n  const {\n    appState,\n    dispatch\n  } = useAppContext();\n  const {\n    turn,\n    castleDirection,\n    position: currentPosition\n  } = appState;\n  const onDragStart = e => {\n    e.dataTransfer.effectAllowed = \"move\";\n    e.dataTransfer.setData(\"text/plain\", `${piece},${rank},${file}`);\n    setTimeout(() => {\n      e.target.style.display = 'none';\n    }, 0);\n    if (turn === piece[0]) {\n      const candidateMoves = arbiter.getValidMoves({\n        position: currentPosition[currentPosition.length - 1],\n        prevPosition: currentPosition[currentPosition.length - 2],\n        castleDirection: castleDirection[turn],\n        piece,\n        file,\n        rank\n      });\n      dispatch(generateCandidates({\n        candidateMoves\n      }));\n    }\n  };\n  const onDragEnd = e => {\n    e.target.style.display = 'block';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `piece ${piece} p-${file}${rank}`,\n    draggable: true,\n    onDragStart: onDragStart,\n    onDragEnd: onDragEnd\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(Piece, \"Sp8isE722iafHYnlNiP1TMTdChI=\", false, function () {\n  return [useAppContext];\n});\n_c = Piece;\nexport default Piece;\nvar _c;\n$RefreshReg$(_c, \"Piece\");","map":{"version":3,"names":["arbiter","useAppContext","generateCandidates","jsxDEV","_jsxDEV","Piece","rank","file","piece","_s","appState","dispatch","turn","castleDirection","position","currentPosition","onDragStart","e","dataTransfer","effectAllowed","setData","setTimeout","target","style","display","candidateMoves","getValidMoves","length","prevPosition","onDragEnd","className","draggable","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dr. Diabootical/OneDrive/Gaming/ReactChess-master/src/components/Pieces/Piece.js"],"sourcesContent":["import arbiter from '../../arbiter/arbiter';\nimport { useAppContext }from '../../contexts/Context'\nimport { generateCandidates } from '../../reducer/actions/move';\n\nconst Piece = ({\n    rank,\n    file,\n    piece,\n}) => {\n\n    const { appState, dispatch } = useAppContext();\n    const { turn, castleDirection, position : currentPosition } = appState\n\n    const onDragStart = e => {\n        e.dataTransfer.effectAllowed = \"move\";\n        e.dataTransfer.setData(\"text/plain\",`${piece},${rank},${file}`)\n        setTimeout(() => {\n            e.target.style.display = 'none'\n        },0)\n\n        if (turn === piece[0]){\n            const candidateMoves = \n                arbiter.getValidMoves({\n                    position : currentPosition[currentPosition.length - 1],\n                    prevPosition : currentPosition[currentPosition.length - 2],\n                    castleDirection : castleDirection[turn],\n                    piece,\n                    file,\n                    rank\n                })\n            dispatch(generateCandidates({candidateMoves}))\n        }\n\n    }\n    const onDragEnd = e => {\n       e.target.style.display = 'block'\n     }\n \n    return (\n        <div \n            className={`piece ${piece} p-${file}${rank}`}\n            draggable={true}   \n            onDragStart={onDragStart} \n            onDragEnd={onDragEnd}\n\n        />)\n}\n\nexport default Piece"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,uBAAuB;AAC3C,SAASC,aAAa,QAAO,wBAAwB;AACrD,SAASC,kBAAkB,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,KAAK,GAAGA,CAAC;EACXC,IAAI;EACJC,IAAI;EACJC;AACJ,CAAC,KAAK;EAAAC,EAAA;EAEF,MAAM;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGV,aAAa,CAAC,CAAC;EAC9C,MAAM;IAAEW,IAAI;IAAEC,eAAe;IAAEC,QAAQ,EAAGC;EAAgB,CAAC,GAAGL,QAAQ;EAEtE,MAAMM,WAAW,GAAGC,CAAC,IAAI;IACrBA,CAAC,CAACC,YAAY,CAACC,aAAa,GAAG,MAAM;IACrCF,CAAC,CAACC,YAAY,CAACE,OAAO,CAAC,YAAY,EAAC,GAAGZ,KAAK,IAAIF,IAAI,IAAIC,IAAI,EAAE,CAAC;IAC/Dc,UAAU,CAAC,MAAM;MACbJ,CAAC,CAACK,MAAM,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM;IACnC,CAAC,EAAC,CAAC,CAAC;IAEJ,IAAIZ,IAAI,KAAKJ,KAAK,CAAC,CAAC,CAAC,EAAC;MAClB,MAAMiB,cAAc,GAChBzB,OAAO,CAAC0B,aAAa,CAAC;QAClBZ,QAAQ,EAAGC,eAAe,CAACA,eAAe,CAACY,MAAM,GAAG,CAAC,CAAC;QACtDC,YAAY,EAAGb,eAAe,CAACA,eAAe,CAACY,MAAM,GAAG,CAAC,CAAC;QAC1Dd,eAAe,EAAGA,eAAe,CAACD,IAAI,CAAC;QACvCJ,KAAK;QACLD,IAAI;QACJD;MACJ,CAAC,CAAC;MACNK,QAAQ,CAACT,kBAAkB,CAAC;QAACuB;MAAc,CAAC,CAAC,CAAC;IAClD;EAEJ,CAAC;EACD,MAAMI,SAAS,GAAGZ,CAAC,IAAI;IACpBA,CAAC,CAACK,MAAM,CAACC,KAAK,CAACC,OAAO,GAAG,OAAO;EAClC,CAAC;EAEF,oBACIpB,OAAA;IACI0B,SAAS,EAAE,SAAStB,KAAK,MAAMD,IAAI,GAAGD,IAAI,EAAG;IAC7CyB,SAAS,EAAE,IAAK;IAChBf,WAAW,EAAEA,WAAY;IACzBa,SAAS,EAAEA;EAAU;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAExB,CAAC;AACV,CAAC;AAAA1B,EAAA,CA1CKJ,KAAK;EAAA,QAMwBJ,aAAa;AAAA;AAAAmC,EAAA,GAN1C/B,KAAK;AA4CX,eAAeA,KAAK;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}