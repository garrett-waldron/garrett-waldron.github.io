{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dr. Diabootical\\\\OneDrive\\\\Gaming\\\\ReactChess-master\\\\src\\\\components\\\\Pieces\\\\Pieces.js\",\n  _s = $RefreshSig$();\nimport './Pieces.css';\nimport Piece from './Piece';\nimport { useRef } from 'react';\nimport { useAppContext } from '../../contexts/Context';\nimport { openPromotion } from '../../reducer/actions/popup';\nimport { getCastlingDirections } from '../../arbiter/getMoves';\nimport { updateCastling, detectStalemate, detectInsufficientMaterial, detectCheckmate } from '../../reducer/actions/game';\nimport { makeNewMove, clearCandidates } from '../../reducer/actions/move';\nimport arbiter from '../../arbiter/arbiter';\nimport { getNewMoveNotation } from '../../helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pieces = () => {\n  _s();\n  const {\n    appState,\n    dispatch\n  } = useAppContext();\n  const currentPosition = appState.position[appState.position.length - 1];\n  const ref = useRef();\n  const updateCastlingState = ({\n    piece,\n    file,\n    rank\n  }) => {\n    const direction = getCastlingDirections({\n      castleDirection: appState.castleDirection,\n      piece,\n      file,\n      rank\n    });\n    if (direction) {\n      dispatch(updateCastling(direction));\n    }\n  };\n  const openPromotionBox = ({\n    rank,\n    file,\n    x,\n    y\n  }) => {\n    dispatch(openPromotion({\n      rank: Number(rank),\n      file: Number(file),\n      x,\n      y\n    }));\n  };\n  const calculateCoords = e => {\n    const {\n      top,\n      left,\n      width\n    } = ref.current.getBoundingClientRect();\n    const size = width / 8;\n    const y = Math.floor((e.clientX - left) / size);\n    const x = 7 - Math.floor((e.clientY - top) / size);\n    return {\n      x,\n      y\n    };\n  };\n  const move = e => {\n    const {\n      x,\n      y\n    } = calculateCoords(e);\n    const [piece, rank, file] = e.dataTransfer.getData(\"text\").split(',');\n    if (appState.candidateMoves.find(m => m[0] === x && m[1] === y)) {\n      const opponent = piece.startsWith('b') ? 'w' : 'b';\n      const castleDirection = appState.castleDirection[`${piece.startsWith('b') ? 'white' : 'black'}`];\n      if (piece === 'wp' && x === 7 || piece === 'bp' && x === 0) {\n        openPromotionBox({\n          rank,\n          file,\n          x,\n          y\n        });\n        return;\n      }\n      if (piece.endsWith('r') || piece.endsWith('k')) {\n        updateCastlingState({\n          piece,\n          file,\n          rank\n        });\n      }\n      const newPosition = arbiter.performMove({\n        position: currentPosition,\n        piece,\n        rank,\n        file,\n        x,\n        y\n      });\n      const newMove = getNewMoveNotation({\n        piece,\n        rank,\n        file,\n        x,\n        y,\n        position: currentPosition\n      });\n      dispatch(makeNewMove({\n        newPosition,\n        newMove\n      }));\n      if (arbiter.insufficientMaterial(newPosition)) dispatch(detectInsufficientMaterial());else if (arbiter.isStalemate(newPosition, opponent, castleDirection)) {\n        dispatch(detectStalemate());\n      } else if (arbiter.isCheckMate(newPosition, opponent, castleDirection)) {\n        dispatch(detectCheckmate(piece[0]));\n      }\n    }\n    dispatch(clearCandidates());\n  };\n  const onDrop = e => {\n    e.preventDefault();\n    move(e);\n  };\n  const onDragOver = e => {\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pieces\",\n    ref: ref,\n    onDrop: onDrop,\n    onDragOver: onDragOver,\n    children: currentPosition.map((r, rank) => r.map((f, file) => currentPosition[rank][file] ? /*#__PURE__*/_jsxDEV(Piece, {\n      rank: rank,\n      file: file,\n      piece: currentPosition[rank][file]\n    }, rank + '-' + file, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }, this) : null))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 12\n  }, this);\n};\n_s(Pieces, \"qs2O/Bw5lJjPsM4hS/+Bm4Hu53c=\", false, function () {\n  return [useAppContext];\n});\n_c = Pieces;\nexport default Pieces;\nvar _c;\n$RefreshReg$(_c, \"Pieces\");","map":{"version":3,"names":["Piece","useRef","useAppContext","openPromotion","getCastlingDirections","updateCastling","detectStalemate","detectInsufficientMaterial","detectCheckmate","makeNewMove","clearCandidates","arbiter","getNewMoveNotation","jsxDEV","_jsxDEV","Pieces","_s","appState","dispatch","currentPosition","position","length","ref","updateCastlingState","piece","file","rank","direction","castleDirection","openPromotionBox","x","y","Number","calculateCoords","e","top","left","width","current","getBoundingClientRect","size","Math","floor","clientX","clientY","move","dataTransfer","getData","split","candidateMoves","find","m","opponent","startsWith","endsWith","newPosition","performMove","newMove","insufficientMaterial","isStalemate","isCheckMate","onDrop","preventDefault","onDragOver","className","children","map","r","f","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dr. Diabootical/OneDrive/Gaming/ReactChess-master/src/components/Pieces/Pieces.js"],"sourcesContent":["import './Pieces.css'\nimport Piece from './Piece'\nimport { useRef  } from 'react'\nimport { useAppContext }from '../../contexts/Context'\nimport { openPromotion } from '../../reducer/actions/popup'\nimport { getCastlingDirections } from '../../arbiter/getMoves'\nimport { updateCastling, detectStalemate, detectInsufficientMaterial, detectCheckmate} from '../../reducer/actions/game'\n\nimport { makeNewMove, clearCandidates } from '../../reducer/actions/move'\nimport arbiter from '../../arbiter/arbiter'\nimport { getNewMoveNotation } from '../../helper'\n\nconst Pieces = () => {\n\n    const { appState , dispatch } = useAppContext();\n    const currentPosition = appState.position[appState.position.length-1]\n\n    const ref = useRef()\n\n    const updateCastlingState = ({piece,file,rank}) => {\n        const direction = getCastlingDirections({\n            castleDirection:appState.castleDirection,\n            piece,\n            file,\n            rank\n        })\n        if (direction){\n            dispatch(updateCastling(direction))\n        }\n    }\n\n    const openPromotionBox = ({rank,file,x,y}) => {\n        dispatch(openPromotion({\n            rank:Number(rank),\n            file:Number(file),\n            x,\n            y\n        }))\n    }\n\n    const calculateCoords = e => {\n        const {top,left,width} = ref.current.getBoundingClientRect()\n        const size = width / 8\n        const y = Math.floor((e.clientX - left) / size) \n        const x = 7 - Math.floor((e.clientY - top) / size)\n\n        return {x,y}\n    }\n\n    const move = e => {\n        const {x,y} = calculateCoords(e)\n        const [piece,rank,file] = e.dataTransfer.getData(\"text\").split(',')\n\n        if(appState.candidateMoves.find(m => m[0] === x && m[1] === y)){\n            const opponent = piece.startsWith('b') ? 'w' : 'b'\n            const castleDirection = appState.castleDirection[`${piece.startsWith('b') ? 'white' : 'black'}`]\n\n            if ((piece==='wp' && x === 7) || (piece==='bp' && x === 0)){\n                openPromotionBox({rank,file,x,y})\n                return\n            }\n            if (piece.endsWith('r') || piece.endsWith('k')){\n                updateCastlingState({piece,file,rank})\n            }\n            const newPosition = arbiter.performMove({\n                position:currentPosition,\n                piece,rank,file,\n                x,y\n            })\n            const newMove = getNewMoveNotation({\n                piece,\n                rank,\n                file,\n                x,\n                y,\n                position:currentPosition,\n            })\n            dispatch(makeNewMove({newPosition,newMove}))\n\n            if (arbiter.insufficientMaterial(newPosition))\n                dispatch(detectInsufficientMaterial())\n            else if (arbiter.isStalemate(newPosition,opponent,castleDirection)){\n                dispatch(detectStalemate())\n            }\n            else if (arbiter.isCheckMate(newPosition,opponent,castleDirection)){\n                dispatch(detectCheckmate(piece[0]))\n            }\n        }\n        dispatch(clearCandidates())\n    }\n\n    const onDrop = e => {\n        e.preventDefault()\n        \n        move (e)\n    }\n    \n    const onDragOver = e => {e.preventDefault()}\n\n    return <div \n        className='pieces' \n        ref={ref} \n        onDrop={onDrop} \n        onDragOver={onDragOver} > \n        {currentPosition.map((r,rank) => \n            r.map((f,file) => \n                currentPosition[rank][file]\n                ?   <Piece \n                        key={rank+'-'+file} \n                        rank = {rank}\n                        file = {file}\n                        piece = {currentPosition[rank][file]}\n                    />\n                :   null\n            )   \n        )}\n    </div>\n}\n\nexport default Pieces"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}